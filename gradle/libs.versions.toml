[versions]
agp = "8.7.2"
androidComponents = "128.0"
androidxAnnotation = "1.6.0"
androidxAppcompat = "1.6.1"
androidxCardview = "1.0.0"
androidxConstraintLayout = "2.1.4"
androidxLifecycle = "2.6.2"
androidxPreference = "1.2.0"
androidxRecyclerview = "1.3.2"
androidxRoom = "2.5.2"
androidxVectordrawable = "1.1.0"
androidxViewpager2 = "1.0.0"
androidxWork = "2.8.1"
apacheCommonsMath3 = "3.6.1"
atslCore = "1.5.0"
atslRunner = "1.5.2"
atslJunit = "1.1.5"
colorpickerpreference = "2.0.6"
desugarJdkLibs = "2.1.4"
diskLruCache = "2.0.2"
espresso= "3.5.1"
gamesActivity = "4.0.0"
googleMaterial = "1.9.0"
gson = "2.10.1"
huaweiAGConnectCore = "1.9.1.301"
huaweiAGConnectCoreHarmony = "1.1.0.300"
huaweiHmsHiAnalytics = "6.3.2.300"
huaweiHmsLocation = "6.2.0.300"
huaweiHmsMLComputerVoiceAsr = "3.1.0.300"
huaweiHmsPush = "6.5.0.300"
jetbrainsPython = "0.0.31"
jna = "5.13.0"
junit = "4.13.2"
kotlin = "2.1.0"
kotlinCoroutines = "1.7.3"
okhttp = "4.12.0"
opentelemetryAndroid = "0.9.1-alpha"
opentelemetryApi = "1.46.0"
openxrLoader = "1.0.34"
r8 = "8.7.18"
robolectric = "4.11.1"
zip4j = "2.11.5"

[libraries]
# AGP
agp = { module = "com.android.tools.build:gradle", version.ref = "agp" }
# Mozilla Android Components
androidcomponents-browser-errorpages = { module = "org.mozilla.components:browser-errorpages", version.ref = "androidComponents" }
androidcomponents-browser-state = { module = "org.mozilla.components:browser-state", version.ref = "androidComponents" }
androidcomponents-browser-storage = { module = "org.mozilla.components:browser-storage-sync", version.ref = "androidComponents" }
androidcomponents-browser-domains = { module = "org.mozilla.components:browser-domains", version.ref = "androidComponents" }
androidcomponents-browser-icons = { module = "org.mozilla.components:browser-icons", version.ref = "androidComponents" }
androidcomponents-feature-findinpage = { module = "org.mozilla.components:feature-findinpage", version.ref = "androidComponents" }
androidcomponents-feature-search = { module = "org.mozilla.components:feature-search", version.ref = "androidComponents" }
androidcomponents-feature-toolbar = { module = "org.mozilla.components:feature-toolbar", version.ref = "androidComponents" }
androidcomponents-service-accounts = { module = "org.mozilla.components:service-firefox-accounts", version.ref = "androidComponents" }
androidcomponents-service-sync-logins = { module = "org.mozilla.components:service-sync-logins", version.ref = "androidComponents" }
androidcomponents-mozilla-service-location = { module = "org.mozilla.components:service-location", version.ref = "androidComponents" }
androidcomponents-ui-autocomplete = { module = "org.mozilla.components:ui-autocomplete", version.ref = "androidComponents" }
androidcomponents-concept-engine = { module = "org.mozilla.components:concept-engine", version.ref = "androidComponents" }
androidcomponents-concept-fetch = { module = "org.mozilla.components:concept-fetch", version.ref = "androidComponents" }
androidcomponents-lib-fetch = { module = "org.mozilla.components:lib-fetch-httpurlconnection", version.ref = "androidComponents" }
androidcomponents-lib-dataprotect = { module = "org.mozilla.components:lib-dataprotect", version.ref = "androidComponents" }
androidcomponents-support-rustlog = { module = "org.mozilla.components:support-rustlog", version.ref = "androidComponents" }
androidcomponents-support-rusthttp = { module = "org.mozilla.components:support-rusthttp", version.ref = "androidComponents" }
androidcomponents-support-webextensions = { module = "org.mozilla.components:support-webextensions", version.ref = "androidComponents" }
androidcomponents-support-ktx = { module = "org.mozilla.components:support-ktx", version.ref = "androidComponents" }
androidcomponents-feature-accounts = { module = "org.mozilla.components:feature-accounts", version.ref = "androidComponents" }
androidcomponents-feature-webcompat = { module = "org.mozilla.components:feature-webcompat", version.ref = "androidComponents" }
androidcomponents-feature-webcompat-reporter = { module = "org.mozilla.components:feature-webcompat-reporter", version.ref = "androidComponents" }
androidcomponents-feature-addons = { module = "org.mozilla.components:feature-addons", version.ref = "androidComponents" }
androidcomponents-support-test = { module = "org.mozilla.components:support-test", version.ref = "androidComponents" }
androidcomponents-support-test-appservices = { module = "org.mozilla.components:support-test-appservices", version.ref = "androidComponents" }
# Apache Commons Math 3
apache-commonsmath3 = { module = "org.apache.commons:commons-math3", version.ref = "apacheCommonsMath3" }
# ATSL
atsl-core = { module = "androidx.test:core-ktx", version.ref = "atslCore" }
atsl-runner = { module = "androidx.test:runner", version.ref = "atslRunner" }
atsl-junit = { module = "androidx.test.ext:junit", version.ref = "atslJunit" }
# Colorpicker
colorpicker = { module = "com.github.skydoves:colorpickerpreference", version.ref = "colorpickerpreference" }
# ConstrainLayout
constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidxConstraintLayout" }
# Desugar
desugar-jdk-libs = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugarJdkLibs" }
# DiskLRUCache
disklrucache = { module = "com.jakewharton:disklrucache", version.ref = "diskLruCache" }
# Espresso
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
# Games Activity
games-activity = { module = "androidx.games:games-activity", version.ref = "gamesActivity" }
# GSON
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
# Huawei
huawei-agconnect-core = { module = "com.huawei.agconnect:agconnect-core", version.ref = "huaweiAGConnectCore" }
huawei-agconnect-agcp = { module = "com.huawei.agconnect:agcp", version.ref = "huaweiAGConnectCore" }
huawei-agconnect-core-harmony = { module = "com.huawei.agconnect:agconnect-core-harmony", version.ref = "huaweiAGConnectCoreHarmony" }
huawei-hms-hianaalytics = { module = "com.huawei.hms:hianalytics", version.ref = "huaweiHmsHiAnalytics" }
huawei-hms-location = { module = "com.huawei.hms:location", version.ref = "huaweiHmsLocation" }
huawei-hms-mlcomputervoiceasr = { module = "com.huawei.hms:ml-computer-voice-asr", version.ref = "huaweiHmsMLComputerVoiceAsr" }
huawei-hms-push = { module = "com.huawei.hms:push", version.ref = "huaweiHmsPush" }
# JNA
jna = { module = "net.java.dev.jna:jna", version.ref = "jna" }
# JUnit
junit = { module = "junit:junit", version.ref = "junit" }
# Kotlin
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinCoroutines" }
kotlin-coroutines-jdk8 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "kotlinCoroutines" }
# AndroidX lifecycle
lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime", version.ref = "androidxLifecycle" }
lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidxLifecycle" }
lifecycle-java8 = { module = "androidx.lifecycle:lifecycle-common-java8", version.ref = "androidxLifecycle" }
lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "androidxLifecycle" }
# OKHttp
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
# OpenTelemetry
opentelemetry-exporter-logging = { module = "io.opentelemetry:opentelemetry-exporter-logging", version.ref = "opentelemetryApi" }
opentelemetry-android-core = { module = "io.opentelemetry.android:core", version.ref = "opentelemetryAndroid" }
opentelemetry-android-instrumentation-activity = { module = "io.opentelemetry.android:instrumentation-activity", version.ref = "opentelemetryAndroid" }
opentelemetry-android-instrumentation-anr = { module = "io.opentelemetry.android:instrumentation-anr", version.ref = "opentelemetryAndroid" }
opentelemetry-android-instrumentation-crash = { module = "io.opentelemetry.android:instrumentation-crash", version.ref = "opentelemetryAndroid" }
opentelemetry-android-instrumentation-sessions = { module = "io.opentelemetry.android:instrumentation-sessions", version.ref = "opentelemetryAndroid" }
# OpenXR
openxrloader = { module = "org.khronos.openxr:openxr_loader_for_android", version.ref = "openxrLoader" }
# R8
r8 = { module = "com.android.tools:r8", version.ref = "r8" }
# Robolectric
robolectric = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
# Room
room-compiler = { module = "androidx.room:room-compiler", version.ref = "androidxRoom" }
room-runtime = { module = "androidx.room:room-runtime", version.ref = "androidxRoom" }
# Support libraries
support-annotations = { module = "androidx.annotation:annotation", version.ref = "androidxAnnotation" }
support-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidxAppcompat" }
support-cardview = { module = "androidx.cardview:cardview", version.ref = "androidxCardview"}
support-design = { module = "com.google.android.material:material", version.ref = "googleMaterial" }
support-preference = { module = "androidx.preference:preference", version.ref = "androidxPreference" }
support-recyclerview = { module = "androidx.recyclerview:recyclerview", version.ref = "androidxRecyclerview" }
support-vectordrawable = { module = "androidx.vectordrawable:vectordrawable", version.ref = "androidxVectordrawable" }
support-viewpager2 = { module = "androidx.viewpager2:viewpager2", version.ref = "androidxViewpager2" }
# Work
work-runtime = { module = "androidx.work:work-runtime", version.ref = "androidxWork" }
work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "androidxWork" }
work-testing = { module = "androidx.work:work-testing", version.ref = "androidxWork" }
# ZIP4J
zip4j = { module = "net.lingala.zip4j:zip4j", version.ref = "zip4j" }

[plugins]
jetbrains-python-envs = { id = "com.jetbrains.python.envs", version.ref = "jetbrainsPython" }
