include ':app'

Properties userProperties = null;
if (file('user.properties').canRead()) {
    userProperties = new Properties()
    userProperties.load(file('user.properties').newDataInputStream())
    logger.lifecycle('Local configuration: loaded user.properties')
} else {
    logger.lifecycle('Local configuration: absent user.properties; proceeding as normal.')
}

if (userProperties != null) {
    userProperties.each { prop ->
        gradle.ext.set("userProperties.${prop.key}", prop.value)
        logger.lifecycle("\tuserProperties.${prop.key}" + '=' + prop.value)
    }
    if (gradle.hasProperty('userProperties.enableServo')) {
        logger.lifecycle('Including Servo.')
        include ':servo'
    }
}

Properties localProperties = null;
if (file('local.properties').canRead()) {
    localProperties = new Properties()
    localProperties.load(file('local.properties').newDataInputStream())
    logger.lifecycle('Local configuration: loaded local.properties')
} else {
    logger.lifecycle('Local configuration: absent local.properties; proceeding as normal.')
}

if (localProperties != null) {
    localProperties.each { prop ->
        gradle.ext.set("localProperties.${prop.key}", prop.value)
        logger.lifecycle("\tlocalProperties.${prop.key}" + '=' + prop.value)
    }
}
